"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3747],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var m=r.createContext({}),p=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,d=u["".concat(m,".").concat(f)]||u[f]||s[f]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},16425:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return s}});var r=n(83117),a=n(80102),i=(n(67294),n(3905)),o=["components"],l={},m="WebAssembly with SwiftWasm",p={unversionedId:"WebAssembly/Swift",id:"WebAssembly/Swift",title:"WebAssembly with SwiftWasm",description:"1. Setting up the environment",source:"@site/docs/WebAssembly/Swift.md",sourceDirName:"WebAssembly",slug:"/WebAssembly/Swift",permalink:"/docs/WebAssembly/Swift",editUrl:"https://github.com/enarx/enarx.github.io/blob/main/docs/WebAssembly/Swift.md",tags:[],version:"current",frontMatter:{}},c={},s=[],u={toc:s};function f(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"webassembly-with-swiftwasm"},"WebAssembly with SwiftWasm"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Setting up the environment"),(0,i.kt)("p",{parentName:"li"},"First, we need to pull the docker image and run it in an interactive mode; we would be accessing the container from its bash. To do the same, run the following command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"docker run --rm -it ghcr.io/swiftwasm/swift:latest /bin/bash\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Code"),(0,i.kt)("p",{parentName:"li"},"To write the fibonacci code, we need to have a text editor in the container. For this demo, we would be using nano text editor. To install the same, follow the below instructions :"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"First, we need to run the ",(0,i.kt)("inlineCode",{parentName:"li"},"apt update")," command in our container."),(0,i.kt)("li",{parentName:"ol"},"To install nano text editor using apt, we need to run ",(0,i.kt)("inlineCode",{parentName:"li"},"apt install nano"))),(0,i.kt)("p",{parentName:"li"},"With our text editor now installed in the container, lets make a swift file and write the fibonacci code in it."),(0,i.kt)("p",{parentName:"li"},"To make a new file, we would be using the ",(0,i.kt)("inlineCode",{parentName:"p"},"touch")," command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"touch fibonacci.swift\n")),(0,i.kt)("p",{parentName:"li"},"To open the newly created file in nano text editor, we use this simple command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"nano fibonacci.swift\n")),(0,i.kt)("p",{parentName:"li"},"The fibonacci code in Swift is as follows :"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"func fibonacci(n: Int) -> Int {\n    var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let temp = a\n        a = b\n        b = temp + b\n    }\n    return a\n}\n\nprint(fibonacci(n:7))\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Compiling the code"),(0,i.kt)("p",{parentName:"li"},"To compile your Swift code to wasm, simply run:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"swiftc -target wasm32-unknown-wasi fibonacci.swift -o fibonacci.wasm\n")),(0,i.kt)("p",{parentName:"li"},"This would generate a ",(0,i.kt)("inlineCode",{parentName:"p"},"fibonacci.wasm")," file."))),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Running .wasm file in Wasmtime"),(0,i.kt)("p",{parentName:"li"},"We would be using Wasmtime as our WebAssembly runtime to run our ",(0,i.kt)("inlineCode",{parentName:"p"},"fibonacci.wasm")," file. Before we install wasmtime in our container, we would need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"curl")," command, which is a command-line tool to transfer data to or from a server. To install the ",(0,i.kt)("inlineCode",{parentName:"p"},"curl")," command, run the following command :"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"apt install curl\n")),(0,i.kt)("p",{parentName:"li"},"With that done, lets install our WebAssembly runtime, Wasmtime with the following command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"curl https://wasmtime.dev/install.sh -sSf | bash\n")),(0,i.kt)("p",{parentName:"li"},"We need to open a new terminal to start using Wasmtime, but the same can be achieved simply by the following command."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"exec bash\n")),(0,i.kt)("p",{parentName:"li"},"To run our ",(0,i.kt)("inlineCode",{parentName:"p"},"fibonacci.wasm")," , run the following command :"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"wasmtime fibonacci.wasm\n")))))}f.isMDXComponent=!0}}]);