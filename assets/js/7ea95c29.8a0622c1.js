"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[367],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,b=p["".concat(o,".").concat(d)]||p[d]||m[d]||s;return n?r.createElement(b,l(l({ref:t},c),{},{components:n})):r.createElement(b,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,l=new Array(s);l[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<s;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1744:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return m}});var r=n(83117),a=n(80102),s=(n(67294),n(3905)),l=["components"],i={},o="WebAssembly with Rust",u={unversionedId:"WebAssembly/Rust",id:"WebAssembly/Rust",title:"WebAssembly with Rust",description:"Rust WASI",source:"@site/docs/WebAssembly/Rust.md",sourceDirName:"WebAssembly",slug:"/WebAssembly/Rust",permalink:"/docs/WebAssembly/Rust",editUrl:"https://github.com/enarx/enarx.github.io/blob/main/docs/WebAssembly/Rust.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/WebAssembly/Introduction"},next:{title:"WebAssembly with C++",permalink:"/docs/WebAssembly/C++"}},c={},m=[{value:"Environment setup",id:"environment-setup",level:2},{value:"Rust",id:"rust",level:3},{value:"Wasmtime",id:"wasmtime",level:3},{value:"Install the WebAssembly Rust toolchain:",id:"install-the-webassembly-rust-toolchain",level:3},{value:"Rust Code",id:"rust-code",level:2},{value:"Compiling Rust Code",id:"compiling-rust-code",level:2}],p={toc:m};function d(e){var t=e.components,i=(0,a.Z)(e,l);return(0,s.kt)("wrapper",(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"webassembly-with-rust"},"WebAssembly with Rust"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Rust WASI",src:n(9143).Z,width:"1280",height:"710"})),(0,s.kt)("h2",{id:"environment-setup"},"Environment setup"),(0,s.kt)("p",null,"To get started, you must install the following:"),(0,s.kt)("h3",{id:"rust"},"Rust"),(0,s.kt)("p",null,"Go to ",(0,s.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/tools/install"},"rust-lang.org")," and follow the instructions using rustup."),(0,s.kt)("h3",{id:"wasmtime"},"Wasmtime"),(0,s.kt)("p",null,"You will find wasmtime at ",(0,s.kt)("a",{parentName:"p",href:"https://wasmtime.dev/"},"wasmtime.dev")),(0,s.kt)("h3",{id:"install-the-webassembly-rust-toolchain"},"Install the WebAssembly Rust toolchain:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"}," rustup target install wasm32-wasi\n")),(0,s.kt)("p",null," To get started, lets use a demo that caculates a Fibonacci sequence (i.e. every number after the first two is the sum of the two preceding ones)."),(0,s.kt)("h2",{id:"rust-code"},"Rust Code"),(0,s.kt)("p",null,"First create a new project using the command below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cargo new demo\n")),(0,s.kt)("p",null,"You can use any IDE of your choice and open up this project folder, add this to the ",(0,s.kt)("inlineCode",{parentName:"p"},"main.rs")," file:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-rust"},'use std::io;\n\nfn fib (n: u32) -> u32 {\n    if n <= 0 {\n        return 0;\n    } else if n == 1 {\n        return 1;\n    }   fib(n - 1) + fib(n - 2)\n }\n\n fn main() {\n    let mut nth = String::new();\n\n    println!("Enter input: ");\n\n    io::stdin()\n        .read_line(&mut nth)\n        .expect("Failed to read line");\n\n    let nth: u32 = nth.trim().parse().expect("Please type a number!");\n\n    println!("Fibonacci: {}", fib(nth));\n    \n}\n  \n')),(0,s.kt)("h2",{id:"compiling-rust-code"},"Compiling Rust Code"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Compile using cargo")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build\ncargo run\n")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Rust Screenshot1",src:n(25560).Z,width:"732",height:"148"})),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},"Compile to wasm")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build --target=wasm32-wasi\n")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Rust Screenshot2",src:n(64527).Z,width:"1001",height:"61"})),(0,s.kt)("ol",{start:3},(0,s.kt)("li",{parentName:"ol"},"The wasm file created in release folder of wasi32")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"file target/wasm32-wasi/release/demo.wasm\n")),(0,s.kt)("ol",{start:4},(0,s.kt)("li",{parentName:"ol"},"Wasm runtime")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"\nwasmtime target/wasm32-wasi/release/demo.wasm\n")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Rust Screenshot3",src:n(96360).Z,width:"1049",height:"79"})))}d.isMDXComponent=!0},64527:function(e,t,n){t.Z=n.p+"assets/images/rustCompileScreenshot-f546511a3de89c01ab8b7d7e9e81bb6e.png"},25560:function(e,t,n){t.Z=n.p+"assets/images/rustRunSreenshot-dd7e1fa22e30c1024d9fd0f82d585b6d.png"},9143:function(e,t,n){t.Z=n.p+"assets/images/rustWasi-41434cfd4e72e8a949e5adb2057b62ab.jpg"},96360:function(e,t,n){t.Z=n.p+"assets/images/rustWasm-da71b6428a51a2a1cd191d2b737ed427.png"}}]);