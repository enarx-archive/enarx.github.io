"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2282],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,h=f["".concat(c,".").concat(d)]||f[d]||p[d]||i;return n?r.createElement(h,a(a({ref:t},l),{},{components:n})):r.createElement(h,a({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2578:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=["components"],s={},c=void 0,u={unversionedId:"Repo/signrel",id:"Repo/signrel",title:"signrel",description:"Nathaniel",source:"@site/docs/Repo/signrel.md",sourceDirName:"Repo",slug:"/Repo/signrel",permalink:"/docs/Repo/signrel",editUrl:"https://github.com/enarx/enarx.github.io/blob/main/docs/Repo/signrel.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"uabs",permalink:"/docs/Repo/uabs"},next:{title:"linux",permalink:"/docs/Repo/linux"}},l={},p=[],f={toc:p};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("iframe",{src:"https://www.youtube.com/embed/4lN_ZhnYafA",height:"480",width:"640",allowFullScreen:!0}),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Nathaniel",(0,i.kt)("br",{parentName:"p"}),"\n","And this crate has a dependency on another crate which we're which is right here, which is signrel. And signrel is a crate that contains a trait called signrel. And what this does is it defines relationships between signed and unsigned types. And this is useful for when you're like, Okay, I want to take an integer in, but now I want that maybe to be generic, but I would now want the signed or unsigned version of that same type. And so you can see the trait here. It's literally just a trait that has relationship between the signed and unsigned variants of a particular integer. And we use that in the uabs to get a unsigned. I don't know if these are used anymore they may or may not be."))}d.isMDXComponent=!0}}]);