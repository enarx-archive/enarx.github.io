"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[915],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,y=f["".concat(s,".").concat(d)]||f[d]||l[d]||i;return t?r.createElement(y,a(a({ref:n},p),{},{components:t})):r.createElement(y,a({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=f;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var u=2;u<i;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1155:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return f}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],c={},s="Conclusion",u={unversionedId:"Start/Conclusion",id:"Start/Conclusion",isDocsHomePage:!1,title:"Conclusion",description:'Enarx is a leading open source framework for running applications in TEEs (Trusted Execution Environments). It manages the creation of these TEEs \u2013 referred to as "Keeps" \u2013 providing cryptographic confidence that they are using valid CPU hardware. It encrypts and provisions applications and data using one-time cryptographic keys. The applications run without any of the layers in the stack (e.g. hypervisor, kernel, user-space, middleware) being able to look into or alter the Keep or its contents.',source:"@site/docs/Start/Conclusion.md",sourceDirName:"Start",slug:"/Start/Conclusion",permalink:"/docs/Start/Conclusion",editUrl:"https://github.com/enarx/docs/docs/Start/Conclusion.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Running Enarx",permalink:"/docs/Start/Running"},next:{title:"Introduction",permalink:"/docs/Contributing/Introduction"}},p=[],l={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,'Enarx is a leading open source framework for running applications in TEEs (Trusted Execution Environments). It manages the creation of these TEEs \u2013 referred to as "Keeps" \u2013 providing cryptographic confidence that they are using valid CPU hardware. It encrypts and provisions applications and data using one-time cryptographic keys. The applications run without any of the layers in the stack (e.g. hypervisor, kernel, user-space, middleware) being able to look into or alter the Keep or its contents.'))}f.isMDXComponent=!0}}]);